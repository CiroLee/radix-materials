import{d as b,r as i,j as s,t as N,v as k,w as A,x as T,Q as _,N as v}from"./index-7aiQm4Ms.js";import{N as P,S as p,C as c,A as R}from"./index-B548joKT.js";import{H as e}from"./index-BFX1Q4Ps.js";const d=b({slots:{base:"ui-alert border rounded-medium p-[12px] flex text-[#252521] relative",icon:"",left:"ui-alert__left pr-[8px]",right:"ui-alert__right flex-1 overflow-hidden",title:"ui-alert__title font-bold ellipsis"},variants:{alertType:{default:{base:"border-brand-500 bg-brand-100",icon:"text-brand-600"},success:{base:"border-success-500 bg-success-100",icon:"text-success-600"},info:{base:"border-info-500 bg-info-100",icon:"text-info-600"},warn:{base:"border-warn-500 bg-warn-100",icon:"text-warn-600"},error:{base:"border-danger-500 bg-danger-100",icon:"text-danger-600"}},isPlain:{true:{base:"border-[#D1D6D8] bg-transparent",icon:"text-black"}}},defaultVariants:{alertType:"default"}});function D(o){const{icon:r,alertType:a,isPlain:t}=o,{icon:l}=d();if(r)return s.jsx(s.Fragment,{children:r});switch(a){case"default":return s.jsx(_,{className:l({alertType:a,isPlain:t})});case"info":return s.jsx(T,{className:l({alertType:a,isPlain:t})});case"success":return s.jsx(A,{className:l({alertType:a,isPlain:t})});case"warn":return s.jsx(k,{className:l({alertType:a,isPlain:t})});case"error":return s.jsx(N,{className:l({alertType:a,isPlain:t})})}}const u=i.forwardRef((o,r)=>{const{title:a,content:t,icon:l,alertType:h="default",isPlain:j,showIcon:m=!0,className:g,style:x}=o,{base:f,left:y,right:q,title:w}=d();return s.jsxs("div",{ref:r,className:f({alertType:h,isPlain:j,class:g}),style:x,children:[m&&s.jsx("div",{className:y(),children:s.jsx(D,{alertType:h,isPlain:j,icon:l})}),s.jsxs("div",{className:q(),children:[i.isValidElement(a)?s.jsx(s.Fragment,{children:a}):a?s.jsx("p",{className:w(),children:a}):null,i.isValidElement(t)?s.jsx(s.Fragment,{children:t}):t?s.jsx("div",{children:t}):null]})]})});u.displayName="Alert";const n=u,S=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add content here&quot;</span> /&gt;</span></span>
  )
}
</code></pre>
`,F=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;flex flex-col gap-y-4&quot;</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;default&quot;</span> <span class="hljs-attr">alertType</span>=<span class="hljs-string">&quot;default&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add contents here&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">alertType</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add contents here&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">alertType</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add contents here&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;warn&quot;</span> <span class="hljs-attr">alertType</span>=<span class="hljs-string">&quot;warn&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add contents here&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">alertType</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add contents here&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  )
}
</code></pre>
`,I=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add content here&quot;</span> <span class="hljs-attr">isPlain</span> /&gt;</span></span>
  )
}
</code></pre>
`,$=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span>
      <span class="hljs-attr">title</span>=<span class="hljs-string">{</span>&lt;<span class="hljs-attr">p</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;italic font-bold&quot;</span>&gt;</span>custom title<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>}
      alertType=&quot;warn&quot;
      isPlain
      content={<span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;mt-2&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;nest alert&quot;</span> /&gt;</span>}
    /&gt;</span>
}
</code></pre>
`,E=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;add content here&quot;</span> <span class="hljs-attr">showIcon</span>=<span class="hljs-string">{false}</span> /&gt;</span></span>
  )
}
</code></pre>
`,V=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Alert</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Alert&#x27;</span>；
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RiBearSmileFill</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@remixicon/react&#x27;</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
     <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Alert</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;custom icon&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">{</span>&lt;<span class="hljs-attr">RiBearSmileFill</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;text-[#A45117]&quot;</span> /&gt;</span>} content=&quot;add contents here&quot; /&gt;</span>
  )
}
</code></pre>
`,B=[{prop:"alertType",desc:"alert type",type:"tag:default | info | success | warn | danger",required:!1,default:"default"},{prop:"title",desc:"alert title",type:"React.ReactNode",required:!1,default:"-"},{prop:"content",desc:"alert content",type:"React.ReactNode",required:!1},{prop:"icon",desc:"alert icon",type:"React.ReactNode",required:!1,default:"-"},{prop:"showIcon",desc:"whether to show alert icon",type:"boolean",required:!1,default:"true"},{prop:"className",type:"string",required:!1,default:"-"},{prop:"style",type:"React.CssProperties",required:!1,default:"-"}];function z(){return s.jsxs(s.Fragment,{children:[s.jsx(P,{title:"Alert",sourceName:"Alert"}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"basic"}),s.jsx(n,{title:"title",content:"add contents here"}),s.jsx(c,{content:S})]}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"alertType"}),s.jsxs("div",{className:"flex flex-col gap-y-4",children:[s.jsx(n,{title:"default",alertType:"default",content:"add contents here"}),s.jsx(n,{title:"info",alertType:"info",content:"add contents here"}),s.jsx(n,{title:"success",alertType:"success",content:"add contents here"}),s.jsx(n,{title:"warn",alertType:"warn",content:"add contents here"}),s.jsx(n,{title:"error",alertType:"error",content:"add contents here"})]}),s.jsx(c,{content:F})]}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"isPlain"}),s.jsx(n,{isPlain:!0,title:"isPlain",content:"add contents here"}),s.jsx(c,{content:I})]}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"custom title & content"}),s.jsx(n,{title:s.jsx("p",{className:"italic font-bold",children:"custom title"}),alertType:"warn",isPlain:!0,content:s.jsx(n,{className:"mt-2",content:"nest alert"})}),s.jsx(c,{content:$})]}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"without icon"}),s.jsx(n,{title:"without icon",content:"add contents here",showIcon:!1}),s.jsx(c,{content:E})]}),s.jsxs(p,{className:"mb-4",children:[s.jsx(e,{as:"h4",className:"mb-2",children:"custom icon"}),s.jsx(n,{title:"custom icon",icon:s.jsx(v,{className:"text-[#A45117]"}),content:"add contents here"}),s.jsx(c,{content:V})]}),s.jsx(e,{as:"h2",className:"mb-4",children:"API"}),s.jsx(R,{rows:B})]})}export{z as default};
