import{r as a}from"./index-D3HKnlxg.js";import{$ as b,a as h}from"./index-Bx-rzbkR.js";function z(e,c,{checkForDefaultPrevented:r=!0}={}){return function(t){if(e==null||e(t),r===!1||!t.defaultPrevented)return c==null?void 0:c(t)}}function v({prop:e,defaultProp:c,onChange:r=()=>{}}){const[o,t]=l({defaultProp:c,onChange:r}),n=e!==void 0,i=n?e:o,f=b(r),u=a.useCallback(s=>{if(n){const d=typeof s=="function"?s(e):s;d!==e&&f(d)}else t(s)},[n,e,t,f]);return[i,u]}function l({defaultProp:e,onChange:c}){const r=a.useState(e),[o]=r,t=a.useRef(o),n=b(c);return a.useEffect(()=>{t.current!==o&&(n(o),t.current=o)},[o,t,n]),r}function g(e){const[c,r]=a.useState(void 0);return h(()=>{if(e){r({width:e.offsetWidth,height:e.offsetHeight});const o=new ResizeObserver(t=>{if(!Array.isArray(t)||!t.length)return;const n=t[0];let i,f;if("borderBoxSize"in n){const u=n.borderBoxSize,s=Array.isArray(u)?u[0]:u;i=s.inlineSize,f=s.blockSize}else i=e.offsetWidth,f=e.offsetHeight;r({width:i,height:f})});return o.observe(e,{box:"border-box"}),()=>o.unobserve(e)}else r(void 0)},[e]),c}export{z as $,v as a,g as b};
