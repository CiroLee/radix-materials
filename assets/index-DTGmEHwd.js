import{j as s,d as m,h}from"./index-BepiK9ph.js";import{N as j,S as n,C as e,A as d}from"./index-Bgwtv4aA.js";import{H as l}from"./index-D9VeVT5a.js";const x=m({base:"relative",variants:{type:{flicker:"bg-skeleton-flicker bg-[size:400%_100%] animate-flicker",shimmer:"bg-black/[0.08] animate-shimmer "}},defaultVariants:{type:"flicker"}},{twMerge:!0});function a(p){const{type:c,children:r,className:o,style:i}=p;return s.jsx("div",{className:x({type:c,class:o}),style:i,children:r})}const t=`<pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-title class_">Skeleton</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Skeleton&#x27;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;mt-2 flex items-center&quot;</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;size-[48px] rounded-full&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;flex flex-col justify-center&quot;</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;w-[200px] h-[20px] rounded-md ml-2&quot;</span> /&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;w-[80px] h-[20px] rounded-md ml-2 mt-2&quot;</span> /&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  )
}
</code></pre>
`,u=`<pre class="hljs"><code><span class="hljs-keyword">import</span> { <span class="hljs-title class_">RiImageLine</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@remixicon/react&#x27;</span>;
<span class="hljs-keyword">import</span> <span class="hljs-title class_">Skeleton</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;your path/Skeleton&#x27;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> (
    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Skeleton</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;flicker&quot;</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;size-[48px] flex flex-center rounded-md&quot;</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">RiImageLine</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;text-black/20&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">Skeleton</span>&gt;</span></span>
  )
}
</code></pre>
`,f=[{prop:"type",desc:"type of skeleton",type:"tag: flicker | shimmer",required:!1,default:"small"},{prop:"className",type:"string",required:!1,default:"-"},{prop:"style",type:"React.CssProperties",required:!1,default:"-"}];function N(){return s.jsxs(s.Fragment,{children:[s.jsx(j,{title:"Skeleton",sourceName:"Skeleton"}),s.jsxs(n,{className:"mb-4",children:[s.jsx(l,{as:"h4",className:"mb-2",children:"type: flicker"}),s.jsxs("div",{className:"mt-2 flex items-center",children:[s.jsx(a,{type:"flicker",className:"size-[48px] rounded-full"}),s.jsxs("div",{className:"flex flex-col justify-center",children:[s.jsx(a,{type:"flicker",className:"w-[200px] h-[20px] rounded-md ml-2"}),s.jsx(a,{type:"flicker",className:"w-[80px] h-[20px] rounded-md ml-2 mt-2"})]})]}),s.jsx(e,{content:t})]}),s.jsxs(n,{className:"mb-4",children:[s.jsx(l,{as:"h4",className:"mb-2",children:"type: shimmer"}),s.jsxs("div",{className:"mt-2 flex items-center",children:[s.jsx(a,{type:"shimmer",className:"size-[48px] rounded-full"}),s.jsxs("div",{className:"flex flex-col justify-center",children:[s.jsx(a,{type:"shimmer",className:"w-[200px] h-[20px] rounded-md ml-2"}),s.jsx(a,{type:"shimmer",className:"w-[80px] h-[20px] rounded-md ml-2 mt-2"})]})]}),s.jsx(e,{content:t})]}),s.jsxs(n,{className:"mb-4",children:[s.jsx(l,{as:"h4",className:"mb-2",children:"width children"}),s.jsx(a,{type:"flicker",className:"size-[48px] flex flex-center rounded-md",children:s.jsx(h,{size:"24px",className:"text-black/20"})}),s.jsx(e,{content:u})]}),s.jsx(l,{as:"h2",className:"my-4",children:"API"}),s.jsx(d,{rows:f})]})}export{N as default};
